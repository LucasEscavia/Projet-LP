{% extends 'base.html.twig' %}

{% block stylesheets %}
{{ parent() }}
{% endblock %}

{% block body %}
<h1>Rechercher un(e) secrétaire</h1>

{% for msg in app.session.flashBag.get('notDelete') %}
  <div class="alert alert-primary">
    {{ msg }}
    </div>
{% endfor %}

{% for msg in app.session.flashBag.get('delete') %}
  <div class="alert alert-success">
    {{ msg }}
</div>
{% endfor %}
{% for msg in app.session.flashBag.get('success') %}
    <div class="alert alert-success">
        {{ msg }}
    </div>
{% endfor %}
{% for msg in app.session.flashBag.get('success_modifie') %}
    <div class="alert alert-success">
        {{ msg }}
    </div>
{% endfor %}



<table id="tab_secretaire" class="table table-striped table-bordered table-hover" style="width:100%">
<thead>
<tr>
<th scope="col">Login</th>
<th scope="col">Nom</th>
<th scope="col">Prénom</th>
<th scope="col">Mail Academique</th>
<th scope="col">Modifier</th>
<th scope="col">Supprimer</th>
</tr>
</thead>

<tbody>
{% for secretaire in secretaires %}
<tr onmouseover="showModifs(this,{{ secretaire.id }})"  >
<th id="{{ secretaire.id }}" >{{secretaire.login}}</th>
<td>{{secretaire.nomSecretaire}}</td>
<td>{{secretaire.prenomSecretaire}}</td>
<td>{{secretaire.mailAcademique}}</td>
<td><a href="{{ path('secretaire_edit', {'id' : secretaire.id}) }}" class="edit-btn btn btn-warning active invisible">✎</a></td>
<td><a href="{{ path('secretaire_delete', {'id' : secretaire.id}) }}" class="delete-btn btn btn-danger active invisible">❌</a></td>
</tr>
{% endfor %}
</tbody>
</table>
<a class="btn btn-success" href= {{ path('secretaire_add')}} role="button">Créer un(e) secrétaire</a>
<script>
function showModifs(tr,id){
// Get all list buttons and pass them invisible
const allEdit = Object.values(document.getElementsByClassName('edit-btn'));
const allDel = Object.values(document.getElementsByClassName('delete-btn'));
const allBtns = allEdit.concat(allDel);
for(let i=0;i<allBtns.length;i++)
allBtns[i].classList.add('invisible');

//Make visible only the row buttons
const editBtn = tr.getElementsByClassName('edit-btn')[0];
const deleteBtn = tr.getElementsByClassName('delete-btn')[0];
editBtn.classList.remove("invisible");
deleteBtn.classList.remove("invisible");
}
</script>
{% endblock %}

{%  block javascripts %}
{{ parent() }}
<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>
<script  type="text/javascript">
$(document).ready(function() {
    const table = $('#tab_secretaire').DataTable({
        select: true,
        scroll : 2000,
        lengthChange : false ,
        pageLength : 50,
        "language": {
        "sEmptyTable":     "Aucune donnée disponible dans le tableau",
 "sInfo":           "Affichage de l'élément _START_ à _END_ sur _TOTAL_ éléments",
 "sInfoEmpty":      "Affichage de l'élément 0 à 0 sur 0 élément",
 "sInfoFiltered":   "(filtré à partir de _MAX_ éléments au total)",
 "sInfoPostFix":    "",
 "sInfoThousands":  ",",
 "sLengthMenu":     "Afficher _MENU_ éléments",
 "sLoadingRecords": "Chargement...",
 "sProcessing":     "Traitement...",
 "sSearch":         "Rechercher :",
 "sZeroRecords":    "Aucun élément correspondant trouvé",
 "oPaginate": {
     "sFirst":    "Premier",
     "sLast":     "Dernier",
     "sNext":     "Suivant",
     "sPrevious": "Précédent"
 },
 "oAria": {
     "sSortAscending":  ": activer pour trier la colonne par ordre croissant",
     "sSortDescending": ": activer pour trier la colonne par ordre décroissant"
 },
 "select": {
         "rows": {
             "_": "%d lignes sélectionnées",
             "0": "Aucune ligne sélectionnée",
             "1": "1 ligne sélectionnée"
         }
 }
   }

    });

} );
</script>
{% endblock %}
